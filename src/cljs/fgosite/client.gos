// -*- mode: go -*-
package client

import macros hiccups   "hiccups/core"
import(
        _ "hiccups/runtime"
	"fgosite/code"
)

const jQuery = \`js/jQuery`

func<hiccups.defhtml> pageTemplate(index) {
	const pg = code.Tour[index]
	[DIV.CONTAINER,
		[DIV.PAGE_HEADER,
			[H1, "Functional Go ", [SMALL, "Clojure for the rest of us"]]
		],
		[DIV.ROW, [DIV.COL_MD_12,
			[UL.PAGER,
				if 0 < index {
					[LI.PREVIOUS, [A#PREV, {HREF: "#"}, "&larr; Previous"]]
				},
				if index < count(code.Tour) - 1 {
					[LI.NEXT,     [A#NEXT, {HREF: "#"}, "Next &rarr;"]]
				}
			]
		]],
		[DIV.ROW,
			[DIV.COL_MD_4,
				[TEXTAREA#FGO.FORM_CONTROL, {ROWS: 10},	FGO(pg)]
			],
			[DIV.COL_MD_4, [PRE#CLJ]],
			DESCRIPTION(pg)
		],
		[DIV.ROW, [DIV#ERR.COL_MD_12.ALERT.ALERT_WARNING]]
	]
}


func ajaxPut(url, data, success) {
	jQuery->ajax(jsObj(
		"type",    "PUT",
		"url",     url,
		"data",    data,
		"success", success
	))
}

func ajaxGet(url, success, error) {
	jQuery->ajax(jsObj(
		"url",     url,
		"success", success,
		"error",    error
	))
}

func startsWith(string, prefix) {
	string->lastIndexOf(prefix, 0) == 0
}

func core(index, fgoElem, cljElem, errElem, prevElem, nextElem) {
	func getClj() {
		const(
			fgoText = fgoElem->val()
			prefix  = "/"  str  js.md5(fgoText)
		)
		ajaxGet(
			prefix  str "/clj",
			func(cljText){
				if cljText startsWith "Parse error" {
					errElem->html(cljText)
					errElem->slideDown()
				} else {
					cljElem->html(cljText)
					errElem->slideUp()
					errElem->html("")
				}
			},
			func(){
				ajaxPut(prefix  str  "/fgo", fgoText, getClj)
			}
		)
	}

	fgoElem->keyup(getClj)
	prevElem->click(func{main(index - 1)})
	nextElem->click(func{main(index + 1)})
	getClj()
}

func main(index) {
	const(
		insertHere = jQuery("#insert-here")
	)
	insertHere->html(pageTemplate(index))
	core(index, jQuery("#fgo"), jQuery("#clj"), jQuery("#err"), jQuery("#prev"), jQuery("#next"))
}

jQuery(func(){
	main(0)
})

